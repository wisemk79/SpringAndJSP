<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.0.xsd">
       
<!-- @Autowired 사용을 위해 -->
    <context:annotation-config/> 
    
    <!-- 요청을 받아서 처리해줄 컨트롤러클래스를 등록 -->
    <bean class="com.board.dao.BoardDaoImpl" />
    <bean class="com.board.controller.ListController" />
    <bean class="com.board.controller.WriterController" />
    <bean class="com.board.controller.DetailController" />
    <bean class="com.board.controller.UpdateController" />
    <bean class="com.board.controller.DeleteController" />
    
    <!-- 다운로드 받을 뷰객체를 생성하라고 빈즈로 등록X(발생) 
           return new ModelAndView("downloadView","downloadFile",downloadFile);
                                                   =========와 id값이 같아야 된다.
     -->
    <bean id="downloadView" class="com.board.view.DownloadView" />
 
    <!-- tiles (ViewResolver)설정 
           setDefinitions("/WEB-INF/tiles-def/tilesdef.xml")-->
           
    <bean id="tilesConfigurer" 
      class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <property name="definitions">
            <list>
                <value>/WEB-INF/tiles-def/tilesdef.xml</value>
            </list>
        </property>
    </bean>
    
    <bean id="viewResolver" 
     class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <property name="viewClass"
         value="org.springframework.web.servlet.view.tiles3.TilesView"/>
        <property name="order" value="1"/>
    </bean>
    
    <!-- 리소스번들파일을 불러오는 환경설정부분
           리소스번들파일->웹상에서 필요로하는 문자열이나 유효성검사에 관련된 부분을 불러올때 사용하는
                                   환경설정 파일
          ResourceBundleMessageSource=>리소스파일 불러오는 역할 
          public void setBasename(String basename) {
		  setBasenames(basename);
		  messages(패키지명).label(불러올 파일명)=>확장자->~.properties이 생략
	}                        
      -->
    <bean id="messageSource" 
        class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames">
	        <list>
	            <value>messages.label</value>
	            <value>messages.validation</value>
	        </list>
        </property>
    </bean>
    
    <!-- 스프링에서 예외페이지 작성
       SimpleMappingExceptionResolver=>스프링에서 예외처리를 해주는 클래스
       <prop key="java.lang.Exception">pageError(예외처리 페이지명)</prop>
                         예외가 발생가능성이있는 예외처리클래스명
                         java.lang.NullPointerException =>지정한 예외처리 페이지로 이동(보여달라)
                         java.lnag.NumberFormatException
                         ,,,
     -->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="java.lang.Exception">pageError</prop>
            </props>
        </property>
    </bean>
    
    <!-- 파일 다운로드 뷰를 위한 전용 viewResolver를 빈즈로 등록 -->
    <bean class="org.springframework.web.servlet.view.BeanNameViewResolver"
              p:order="0" />
   
    <!-- 파일업로드(최대업로드크기 지정,한글처리부분) 
            52428800(byte단위)->50MB->51,200kb->52,428,800byte
           CommonsMultipartResolver->업로드 관여하는 클래스 빈즈등록
           maxUploadSize(최대 업로드크기지정 속성)
           defaultEncoding(한글처리부분 설정 속성)
      -->
    <bean id="multipartResolver"
  class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
       <property name="maxUploadSize" value="52428800" />
       <property name="defaultEncoding" value="utf-8" />
   </bean>
 
</beans>





























