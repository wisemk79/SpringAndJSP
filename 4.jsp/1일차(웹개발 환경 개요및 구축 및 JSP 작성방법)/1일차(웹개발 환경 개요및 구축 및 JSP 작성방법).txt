1일차(웹개발 환경 개요및 구축 및 JSP 작성방법)

1.DB_Person.java로 save as

2.테이블 생성

create table person(
name varchar2(15),
age varchar2(3),
tel varchar2(20));

테이블이 생성되었습니다.

2.생성자 다음에 메서드 호출

//1.DB의 초기화코드->connect(단순,반복->매개변수X,반환값 X)->private(외부 DB접속X)
	private void connect() {
		try {
			//1.접속할 드라이버를 메모리에 올리기(상위패키지명.하위패키지명..클래스명)
			Class.forName("oracle.jdbc.driver.OracleDriver");//ojdbc6.jar
			String url="jdbc:oracle:thin:@localhost:1521:orcl";//오라클 서버(자기것)
			//2.접속하기위해서 로그인인증->1.접속경로 2.접속계정 3.암호
			con=DriverManager.getConnection(url, "scott", "tiger");
			System.out.println("접속 con=>"+con);
		}catch(Exception e) {
			System.out.println("DB연결실패(e)=>"+e);
		} 
	}
---------------------------------------------------------------
 select()

public void select() {
		try {
			String sql="select * from person";//실행할 sql문장
			pstmt=con.prepareStatement(sql);
			System.out.println("pstmt=>"+pstmt);//NullPointerException
			rs=pstmt.executeQuery();
			System.out.println("rs=>"+rs);
			//레코드 불러와서 model에 데이터를 넣어준다.->JTable에 보여주게 된다.
			while(rs.next()) {//찾은 레코드가 있다면 이동하라(rs.next()==true)
				String name=rs.getString("name");
				String age=rs.getString("age");//int age=rs.getInt("age"); number
			    String tel=rs.getString("tel");
			    //모델에 값을 저장하는 구문->Object[]->model에 저장
			    Object data[]= {name,age,tel};
			    model.addRow(data);
			    //------------------------------------------
			    System.out.println(name+","+age+","+tel);
			}
		}catch(Exception e) {
			System.out.println("select()메서드 실행오류=>"+e);
		}
	}
============================================
actionPerformed 소스추가

Object data[] = { tf1.getText(), tf2.getText(), tf3.getText() };
			model.addRow(data);
			// --똑같이 테이블에도 데이터가 들어갈 수 있도록 처리-----------------------------------------
			try {
				String sql = "insert into person values(?,?,?)";
				pstmt = con.prepareStatement(sql);
				pstmt.setString(1, tf1.getText());
				pstmt.setString(2, tf2.getText());// pstmt.setInt(2,tf2.getText());
				pstmt.setString(3, tf3.getText());
				int insert = pstmt.executeUpdate();// 1->성공 0->실패
				System.out.println("데이터 성공유무(insert)=>" + insert);
				// select->콘솔에 출력
				sql = "select * from person";// 실행할 sql문장
				pstmt = con.prepareStatement(sql);
				rs = pstmt.executeQuery();
				while (rs.next()) {// 찾은 레코드가 있다면 이동하라(rs.next()==true)
					String name = rs.getString("name");
					String age = rs.getString("age");// int age=rs.getInt("age"); number
					String tel = rs.getString("tel");
					System.out.println(name + "," + age + "," + tel);
				}
			} catch (Exception e2) {
				System.out.println("person테이블에 데이터 입력 실패(e2)=>" + e2);
			}
			// ---------------------------------------------
			// 다시 입력을 받을 수 있도록 초기화
			tf1.setText("");
			tf2.setText("");
			tf3.setText("");
			tf1.requestFocus();
		}
==========================================
프로그램 종료시 DB연결해제 및 메모리 관리까지 

connect();// DB초기화
		select();// select * from person;
		// ----------------------------------
		this.addWindowListener(new WindowAdapter() {
			@Override
			public void windowClosing(WindowEvent e) {
				// TODO Auto-generated method stub
				//DB연결 메모리 해제하면서 프로그램을 종료
				try {  //마지막 객체생성순서부터 connection까지
					if(rs!=null) rs.close();
					if(pstmt!=null) pstmt.close();
					if(con!=null) con.close();
				}catch(Exception e2) {}
				System.exit(0);
			}

====================================
  작업영역:C:\webtest\4.jsp\sou

JspStudy =>웹프로젝트
 ============================
 *************************************
 웹개발 환경 개요및 구축(JSP) 순서
 *************************************

1.Java 가 먼저 설치(JDK 8.0)->path설정->경로 상관없이
                                                             자바실행
2.웹서버를 설치->1).net  2)php  3)jsp
                                            ===

=>아파치서버->톰캣서버를 설치(9.7MB)->환경설정(무료)
=>유료(Resin,웹스피어,웹로직,,,,)->설치X

http://jakarta.apache.org->tomcat.apache.org
                        --------------------->
=>가장 최신버전의 바로 밑의 버전을 설치할것.=>가장 최신버전은 버그가 존재할 가능성이 높기(9.x)
  ==========================================
  API => Documentation
          8.5.51(업그레이드 수)
8.5.37 =>하위버전까지 언급->발표 


Binary Distributions

•Core: ◦ zip (pgp, sha512) 
=========================
1)~.zip=>다운받아서 압축풀면 끝 (설치는 간단)
    환경설정을 나중에 따로 해줘야 된다.
    ex)8080->포트를 변경시켜야 한다.
      ->오라클 서버와 충돌방지->포트변경

◦ tar.gz (pgp, sha512) =>리눅스

◦ 32-bit Windows zip (pgp, sha512) 
◦ 64-bit Windows zip (pgp, sha512) 
=======================================================
****◦ 32-bit/64-bit Windows Service Installer (pgp, sha512) 
 ~.exe 설치파일=>설치하면서 환경설정도 같이 설정

=======================================================
•Full documentation: ◦ tar.gz (pgp, sha512) 

설치과정

1.환영메세지-->examples(체크유무)기본 예제 설치
 --->***포트번호(HTTP) 8080->8090***
 --->관리자계정->admin/1234
                          --------------
 ---->Java Virutal Machine=>자바가 설치된
       상태->설치경로가 나옴=>C:\Program Files\Java\jre1.8.0_131
       (톰캣서버->자바와 연결하기 때문에 필요하다.)
      ***************************************************************
      =>만약에 이 경로가 안나오시는 경우->자바를 지우고 다시 설치한후
          톰캣서버를 설치할것.(권장)
      ***************************************************************

 ----->설치경로->C:\Tomcat 8.5 -->설치 끝(편리성때문)
                      ==========
           Run Apache Tomcat 
           Show Readme       =>둘다 체크 해제
=============================
                    서버가동 실행파일(=구동파일)
  Tomcat 8.5->bin->Tomcat8.exe (권장) 디버깅창 역할
                   Tomcat8w.exe (대화상자 형태로 제공)
                   
  브라우저 실행
  url->http://localhost:8090
   =>이클립스와 톰캣서버를 연결
   =>화면에 출력
  =============================
   **===============================
 c:\Tomcat8.5\lib
    lib->servlet-api.jar(서블릿에 관련된 라이브러리 파일명)
   **=================================
 톰캣서버를 가동시킨 후
시작/실행->http://localhost:8090 =>고양이 그림 홈페이지
                                         ====
-------------------------------------------------------------
3.개발 편집 도구->editplus(불편 O)->Eclipse로 개발=>실행X or 실행 O

****이클립스의 웹프로그래밍을 위한 환경설정*****

1.작업영역 변경

파일->switch workspace->변경=>C:\webtest\4.jsp\sou =>로 작업영역설정
                                           other

2.웹프로젝트를 생성->JspStudy

  서버를 등록=>유료서버(회사)->Resin,WebLogic,,,맞춰서 등록

  이클립스->서버(톰캣서버의 위치를 지정)->자바의 설치위치(서블릿때문에)
             ->그림참조

  ->Context root->JspStudy (프로젝트이름)
  ->Content directory:WebContent(/) (작업영역)->html,css,js,jsp파일
                             C:\,D:\
 ***xml파일의 생성->환경설정할때 필요

Generate web.xml deployment descriptor ->반드시 체크->web.xml 생성
==>xml 파일을 가지고 환경설정

***********************************************************************
   웹프로그램의 구조(=웹프로젝트=웹컨텍스트=웹어플리케이션)

       JspStudy
************************************************************************           
           |
            -Java Resources
                      |
                       -src=>자바파일(->서블릿파일)이 저장된 곳
                       빈즈파일(웹상에서 불러다 사용하는 파일)이 저장된 영역
            |
              -WebContent(/)->c:/=>메인페이지(index.html, index.jsp
                                                          ===============
                                                                          or  main.jsp
                                                                                   main.jsp)
                                               hello.jsp(1)
                          -images->이미지저장
                          -js
                          abc->imsi.jsp(2)
                               dec.jsp(3)
                             sub->comment.jsp(4)
                                  control->array.jsp(5)
                        |
                         -META-INF=>DB연동할때 사용되는 Xml파일 저장되는곳
                        |
                         -WEB-INF
                              |
                              -lib->외부의 자바의 라이브러리 파일이 저장되는위치
                                          ojdbc6.jar저장
                                |
                                 -web.xml->*웹프로그래밍에서 사용할 환경설정파일*
================================================================================
              1. html,=>주로 디자인된 화면 필요->자바코드 X
                                          자바스크립트 코드 O
                                                   

              2.jsp파일로 디자인 가능=>디자인+자바코드 사용 O
Window메뉴->Perference
=>General                                     ================
            Appearance
                  Colors and Fonts=>Basic
                                              Text Font

  **Server->Runtime Environments->등록된 서버를 
                                                     편집(지우고 재등록)
***************************************************
Workspace->Text File encoding->UTF 
 Web->css,html,jsp=>UTF-8로 설정을 할것
**************************************************
•Deployer: ◦ zip (pgp, sha512) 
◦ tar.gz (pgp, sha512) 

•Extras: ◦ JMX Remote jar (pgp, sha512) 
◦ Web services jar (pgp, sha512) 

•Embedded: ◦ tar.gz (pgp, sha512) 
◦ zip (pgp, sha512) 



Source Code Distributions

• tar.gz (pgp, sha512) 
• zip (pgp, sha512

