11일차(게시판구현 - mysql설치및 환경설정, 페이징 처리 및 구현(1)

접속한 사용자마다->만들어서 Connection con을 줘야된다.(속도가 느리다)
======================================
 미리 커녁션객체를 만들어서 보관(자료구조->벡터,해쉬테이블에 저장)

 ** 커넥션풀(pool) 개념

 10개를 미리 만들어서 저장->요청할때마다 빌려주는 개념,반환구조
===========================================
사용목적=>DB연동할때 속도를 향상시킬 목적으로 만든 기법
************************************************************************

회원관리(회원 로그인~)->게시판의 개요,종류,구성방법
                                    글목록보기(=회원리스트)~ =>** 테이블명과 필드명과 변경 **
                                                 관리자 페이지=>회원리스트

                                 =>**1.페이징처리(글목록보기)
                                       2.댓글을 다는 로직=>글쓰기 및 댓글다는 로직
----------------------------------------------------------------------------------
www.jspstudy.co.kr

요구분석

1.게시판의 종류

1.공지사항->관리자만 글쓰기,편집,삭제->거의 자유게시판 성격
                  ====정보를 알려주는 역할

2.자유게시판(free board)->1)회원에 가입X 자유롭게 글쓰기,글수정,글삭제,글조회,,,
                                   2)댓글(X)

***3.Q&A게시판(=답변형 게시판)=>변형이 되는 게시판(댓글이 내부적으로 감춰진 게시판)
                   ->152p 예외처리 질문     [2] ->댓글수
                   =>테이블을 2개 설계(1:다 관계때문에)

                  =>글쓰기,글수정,글삭제,글조회+댓글기능
                  =>회원제 운영(실명제) O or X
                  =>글삭제(게시판의 취지와 상관없는 광고성 글(통보없이 삭제)~)

*** 4.자료실겸용 게시판->Q&A 게시판+파일업로드 & 다운로드==>** 스프링 **
======================================================

  답변형 게시판=>JspBoard(프로젝트명)

  공지사항게시판->따로 만들어서 ->하나의 페이지에 붙이는 경우(조합해서 출력)
  답변형게시판->  ** 요구분석 **=>테이블을 설계 작성

 게시판의 필드->눈에 보이는 필드(번호,분류(공지,Q&A,,,),제목,이름(작성자)
                                                작성날짜(오늘날짜),조회수)
                       눈에 보이지 않는 필드->댓글(ref,step,level)

  자유게시판+댓글(ref,step,level)=>답변형 게시판
  (=공지사항)
--------------------------------------------------------------------
 게시판의 번호(큰번호-->하나씩 감소)

 테이블에 저장된 순서와 반대로 출력
 1
 2
 3----------------------->3 ->가장 최근의 글이 맨앞에 온다
                                    2
                                    1
 1
 ,,,,
 223
-----------------------------------------------------------------
한페이지당 기본 레코드갯수 10개
15페이지->150개(레코드수*페이지수)->총레코드수
----------------------------------
기본용어 10가지 공식
-------------------------------
JspBoard-->JspBoard2(모델2)=>MySQL 설치(개인,중소규모)(오라클 (실무)(대규모)

  JspBoard==>1.페이징 처리기법 2.댓글다는 로직->회원관리와 동일
       |                                                                 회원리스트(메서드)
           DB에 연결
        -src->1.DBConnectionMgr(DB)->mysql로 작성

                 private String _driver = "org.gjt.mm.mysql.Driver",->mysql 드라이버
                _url = "jdbc:mysql://127.0.0.1:3306/mydb?useUnicode=true&characterEncoding=EUC_KR",
                                                               ===(포트번호 3306,3307)
                     /mydb(접속할 DB명)?useUnicode=true&characterEncoding=UTF-8",
                _user = "root",  (접속계정명)
                _password = "1234";(암호)  
       |
         -WebContent
                  |
                   -WEB-INF
                         |
                          -lib->접속할 드라이브에 대한 라이브러리를 추가로 설정
                                 ojdbc6.jar or mysql-connector~.jar

                   -list.jsp(글목록보기)->memberlist.jsp(회원리스트)
================================================
http://www.mysql.com
  -------------------------------
  **환경설정을 하면서 세밀하게 설치-> Custom
  **설치경로-> C:\MySQL 5.1\

*******************************************************
  =>우편번호도 같이 설치

  Register the MySQL Server now->체크해제
    계정생성X (등록X)
-------------------------------------------------
  Configure the Mysql Server now ->체크유지
  =>계속 환경설정을 이어서 할 예정
  =>언급하지 않은 부분은 그냥 next

  Multifunctional Database(다기능 목적)로 사용

  Decision Support=>통계목적 사용(X)

  Manual Setting  =>동시접속수 지정(15) 체크
  포트번호 3306 or 3307(다른 mysql이 설치된경우)
    <->오라클 1521
  언어선택->euckr=>utf8(대세)
  ----------------------------------------------------
  **서비스=>MySQL
  **PATH에 bin폴더 등록->경로에 상관없이 mysql명령어
                                  사용하게 하기위해서
 ------------------------------------------------------
  암호 1234 =>관리자 -> root
  ** 원격접속 체크->Enable root access from remote machine
     가능하게(교육 때문에)->보안때문에 제한을 줄 수 있다.

====================>finish

Enter password: ****  =>1234
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 2
Server version: 5.1.45-community MySQL Community Server (GPL)

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

간단한 콘솔 작업

1.show databases;==>현재 어떤 데이터베이스 목록확인
                              전체 내용을 확인
------------------------------------
 =>오라클의 select *  from tab;
------------------------------------

mysql>show databases; //탐색기의 폴더처럼 생각

+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| test               |
+--------------------+
3 rows in set (0.00 sec)

2.특정 DB에 접속->들어가고 싶다.
 use 전환할 DB명

mysql> use mysql;  //DB에는 테이블이 들어있다.
Database changed  =>현재 mysql DB에 접속했음을 의미

--------------------------------------------------------------------------
오라클->사용자 관리->계정을 만들어서 테이블 작성=>테이블스페이스
                                                                         저장
MySQL=>계정 로그인(root)/1234=> 특정 DB에 접속->테이블 생성
------------------------------------------------------------------------

3.DB에 들어가 있는 테이블을 보여주세요(목록)

mysql>show tables;

mysql> show tables;
+---------------------------+
| Tables_in_mysql           |
+---------------------------+
| columns_priv              |
| db                        |
| event                     |
| func                      |
| general_log               |
| help_category             |
| help_keyword              |
| help_relation             |
| help_topic                |
| host                      |
| ndb_binlog_index          |
| plugin                    |
| proc                      |
| procs_priv                |
| servers                   |
| slow_log                  |
| tables_priv               |
| time_zone                 |
| time_zone_leap_second     |
| time_zone_name            |
| time_zone_transition      |
| time_zone_transition_type |
| user                      |
+---------------------------+
23 rows in set (0.00 sec)

4.desc user; //구조확인 =>오라클과 동일=>desc 테이블명
5.select * from user;
---------------------------
        자기자신의 root계정              (암호화-1234)
| localhost | root | *A4B6157319038724E3560894F7F932C8886EBFCF | Y
           | Y           | Y           | Y           | Y         | Y
 Y             | Y            | Y         | Y          | Y
      | Y          | Y            | Y          | Y                     |
          | Y            | Y               | Y                | Y
 | Y              | Y                   | Y                  | Y
| Y          | Y            |          |            |             |
 |             0 |           0 |               0 |                    0 |
| %         | root | *A4B6157319038724E3560894F7F932C8886EBFCF | Y
                 =====>원격으로 접속할때 사용하는 관리자 계정명
               
mysql>exit->종료
---------------------------
SQLGate for Mysql->30일(그래픽툴)

유저명:root
패스워드:1234
서버:localhost ->상대방의 ip주소를 입력->원격가능
                     =>ip?
포트:3306------>3307
데이터베이스:mysql ->처음에는 존재하는 DB에 접속
**캐릭터셋:utf8
**유니코드 사용->반드시 체크할것->한글사용 가능
  연결테스트->접속성공

** 환경설정 **

도구->프로그램 옵션
          SQL 에디터 ->options
                  에디터폰트->글꼴,크기 정해준다.
                                   돋움체
===========================
 오라클과 mysql의 자료형 비교
 ==================

 오라클->varchar2(글자)-->varchar(mysql) 글자저장
             =================>
             varchar
             number(숫자)----->int->smallint(int보다 더 적은 자료형)
            ==================
             varchar2(4000)      ->text
                한글은 2000까지(비고)
              clob
-------------------------------------------------------------------------------
 MySQL 사용방법

-- 한줄 주석
/*
   여러줄 주석 
*/  

--1.DB생성  create database 생성할 DB명 

create database imsi;

--2.DB삭제  drop database 삭제시킬 DB명;
drop database imsi; 

create database mydb;

use mydb;

--3.테이블 생성->오라클과 형식이 거의 같다.(varchar,int,text)

create table sawon
( id int(5) not null ,/* 사번 */
  name varchar(13) not null, /* 이름 */
  dept varchar(14) not null); 
 ***************************************************
 CREATE TABLE sawon (
  id int(5) NOT NULL,
  name varchar(13) NOT NULL,
  dept varchar(14) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8

 ****************************************************
--4.테이블의 구조 (desc 테이블명)
desc sawon 

--5.필드를 추가
--alter table 수정t add column 필드명 자료형(=데이터형) 제약조건 
alter table sawon add column addr varchar(40);

--6.필드를 삭제
--alter table 수정t drop column 삭제할 필드명
alter table sawon drop column addr; 

--7.필드를 변경
--alter table 수정t modify colum 변경할 필드명 자료형 제약조건
alter table sawon modify column dept varchar(30); 
 
--8.insert

insert into sawon values(1,'홍길동','영업부'); 
insert into sawon values(2,'테스트','개발부'); 
insert into sawon values(3,'임시','관리부'); 
insert into sawon values(4,'임시2','총무부'); 
insert into sawon values(5,'테스트2','생산2부'); 

-- 9.select
select * from sawon where id=2 or dept='영업부'; 

--10.테이블의 이름을 변경=>rename table 원본t명 to 변경t명
rename table sawon to test;
rename table test to sawon;

--11.테이블의 백업
--create table 백업t명 as select * from 원본t명
create table b_sawon as select * from sawon;

--12.필드정렬-> order by 정렬할 필드명 정렬기준(asc or desc)
select * from sawon order by id desc; 

------------------------------------------------
  mydb =>게시판의 테이블 작성

CREATE TABLE board (
  num int(11) NOT NULL AUTO_INCREMENT,
  writer varchar(10) NOT NULL,
  email varchar(30) DEFAULT NULL,
  subject varchar(50) NOT NULL,
  passwd varchar(12) NOT NULL,
  reg_date datetime NOT NULL,
  readcount int(11) DEFAULT '0',
  ref int(11) NOT NULL,
  re_step smallint(6) NOT NULL,
  re_level smallint(6) NOT NULL,
  content text NOT NULL,
  ip varchar(20) NOT NULL,
  PRIMARY KEY (num)
) ENGINE=InnoDB DEFAULT CHARSET=utf8

-----------------------------------------------
 MySQL에서의 특정 필드에 auto_increment 키워드가 사용되는 이유
------------------------------------------------------------------------
auto_increment->자동으로 게시물번호가 증가하라.(언어적)

**->수동으로 입력하는 경우 적용X ->insert into 할때는 사용해야한다
                                                직접 게시물번호가 중복이 안되게 넣어줘야
                                                 된다.
                  
--------------------------------------------------------------------------------
=>오라클 ->sequence와 기능이 동일한 MySQL의 구문=>auto_increment
                   pk에 부여 중복되면 안되는 필드에 부여한다.
---------------------------------------------------------------------------------
=>create sequence 시컨스명board_seq; (1,1)
=>insert into board values (board_seq.nextval,~)
                                                            X
=>최대값+1
---------------------------------------------------------
/*   원격의 MySQL에 접속하는 경우의 환경설정부분 */
    
	private String _driver = "org.gjt.mm.mysql.Driver",
    _url = "jdbc:mysql://192.168.0.101:3306/mydb2?useUnicode=true&characterEncoding=UTF-8",
    _user = "root",       =========원격ip주소  접속할DB명
    _password = "1234";

    /*
--------------------------------------------------------
2.BoardDTO =>MemberDTO처럼=>Setter ,Getter 

package lys.board;

//게시판의 작성날짜,시간->DB에 관련된 클래스 따로 존재
import java.sql.Timestamp;  //import java.util.Date(일반적인 날짜)

//웹상에서 테이블의 필드별로 저장,꺼내올 목적으로 사용하는 클래스(메서드의 매개변수,반환형을 이용)
public class BoardDTO {

	private int num;//게시물번호
	//1.눈에 보이는 상태(입력)
	private String writer;//작성자
	private String subject;//글제목
	private String email;//이메일
	private String content;//글내용
	private String passwd;//암호(글쓰기,수정할때->본인임을 인증때문에)
	//2.눈에 안보이는 경우->직접 X
	private Timestamp reg_date;//작성날짜->sysdate<->now()(MySQL에서 사용하는 함수)
	private int readcount;//조회수->default->0을 입력
	private String ip;//작성자 ip주소를 출력
	//공지사항,자유게시판+3개의 필드추가(답변형)
	private int ref;//글 그룹번호(=단독으로 사용되면 게시물 번호와 역할이 같다)
	private int re_step;//답변글의 순서를 지정(=같은 그룹일때의 답변글 순서)
	private int re_level;//답변글의 답변에 대한 깊이(depth)
	//자료실 추가
	//private String file;//업로드되는 파일의 정보추가(자료실)
------------------------------------------------------------------------------
3.BoardDAO=>DB에 접속해서 불러올 테이블의 crud에 관련된
                       메서드를 선언(insert,update,delete,select)

설계=>DTO(테이블의 갯수에 맞추면 된다.)
      =>DAO=>테이블 갯수에 맞추는게 아니라 연관성

ZipcodeDTO,->우편번호 검색=>회원가입->MemberDAO
==================================

페이징 처리를 연습하기위해서 =>zipcode테이블 ->4만개

형식)먼저 테이블을 작성하고 나서
 mysql -u 접속계정명 -p 암호 접속할DB명  < 경로포함 파일명
c:\mysql5.1\bin\ mysql -u root -p  mydb < zipcode.txt
 password:1234

 부작용->한글이 깨져
------------------------------------------------------

@c:\mysql5.1\bin\zipcode.txt ->오라클의 경우라면

제어문->while(조건식->반복),
                      조건식이 거짓
                     한번도 수행 X

            do~while(무조건 한번은 수행
                           조건식->거짓 끝)
            ->누적의 개념
->ex) 벽돌쌓기


--------------------------------------------
테이블을 생성 ->insert할때 한글이 깨지는 경우 ???
오click->스키마 보기

CREATE TABLE zipcode (
  zipcode char(7) NOT NULL,
  area1 char(10) DEFAULT NULL,
  area2 char(20) DEFAULT NULL,
  area3 char(40) DEFAULT NULL,
  area4 char(20) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8
                                      ==========
                                           CHARSET=latin1=>한글깨짐
연결접속->charset=utf8
               유니코드 사용->체크해야 된다.
============================
BoardDAO

//3-1)페이징 처리를 위해서 전체 레코드수를 구해와야 된다.
    //select count(*) from board->select count(*) from member
    //wherew 조건식이 없으면 매개변수 X
    
    public int getArticleCount() {
    	
    	Connection con=null;
    	PreparedStatement pstmt=null;
    	ResultSet rs=null;
    	int x=0;
    	
    	try {
    		con=pool.getConnection();
    		System.out.println("con="+con);
    		String sql="select count(*) from board";
    		pstmt=con.prepareStatement(sql);
    		rs=pstmt.executeQuery();
    		if(rs.next()) {
    			x=rs.getInt(1);//필드명이 아니기때문에 select ~ from사이에 나오는순서
    		}
    	}catch(Exception e) {
    		System.out.println("getArticleCount()메서드 에러유발"+e);
    	}finally {
    		pool.freeConnection(con, pstmt, rs);
    	}
    	return x;
    }
    
   //3-2)글목록보기에 대한 메서드 구현(매개변수)->범위를 지정->zipcode확인
    //1.레코드의 시작번호, 2.불러올 레코드의 갯수
    public List getArticles(int start,int end) { 
    	
    	Connection con=null;
    	PreparedStatement pstmt=null;
    	ResultSet rs=null;
    	List articleList=null; //ArrayList articleList=null;->10개씩
    	
    	try {
    		con=pool.getConnection();
    		String sql="select * from board order by ref desc,re_step asc limit ?,?";
    		pstmt=con.prepareStatement(sql);
    		pstmt.setInt(1, start-1);//mysql이 레코드순번은 내부적으로 0부터
    		pstmt.setInt(2, end);
    		rs=pstmt.executeQuery();
    		if(rs.next()) {//레코드가 존재한다면(1개)
    			//articleList=new List(); X
    			//articleList=new 자식클래스명();
    			articleList=new ArrayList(end);//end갯수만큼 데이터를 담기위해서
    			do {
    			BoardDTO article=new BoardDTO();
    			article.setNum(rs.getInt("num"));//최대값+1->코딩
    			article.setWriter(rs.getString("writer"));
    			article.setEmail(rs.getString("email"));
    			article.setSubject(rs.getString("subject"));
    			article.setPasswd(rs.getString("passwd"));
    			article.setReg_date(rs.getTimestamp("reg_date"));//오늘날짜->코딩 now()     
    			article.setReadcount(rs.getInt("readcount"));//->default->0
    			article.setRef(rs.getInt("ref"));//그룹번호->언어
    			article.setRe_step(rs.getInt("re_step"));//답변글순서->언어
    			article.setRe_level(rs.getInt("re_level"));//답변의 깊이
    			article.setContent(rs.getString("content"));//글내용
    			article.setIp(rs.getString("ip"));//글쓴이의 ip주소->request.getRemoteAddr();
    			//추가
    			articleList.add(article);
    			}while(rs.next());
    		}
    	}catch(Exception e) {
    		System.out.println("getArticleCount()메서드 에러유발"+e);
    	}finally {
    		pool.freeConnection(con, pstmt, rs);
    	}
    	return articleList;
    }
-------------------------------------------------------------
3.list.jsp=>게시판에 사용되는 용어 9~10가지 용어=>회원리스트 작업

게시판*  Board테이블의 필드12개
--------------------------------------------------------------------------------------------

    1) b_ref (reply family)->***2)답변글로 사용하는 경우=>윗글(일반글)과답변글을묶어준다.
                                                                             (그룹번호 역할을 해준다.)
                                                                      ** 댓글의 위치를 알려준다.**
                                   1)단독으로 사용하는 경우
                                    **각각의 게시물을 구분하는 인자로 사용
                                    (=num와 같다)=>pk(중복X)

   num writer email               ref 
     1    aaa   a@daum.net      0 or 1부터 시작가능하다.
     2    bbb  b@daum.net     1 or 2



    2) b_step(reply step)->몇번째단계의 답변인지를나타내는컬럼 

                            ->같은 level 내에서도 답변글을구분하는 인자 (asc)으로 구분
                             오름차순으로 구분->0 ,1 2 ,3,4,5

    3) b_level(reply level)=> 글의정렬순서를지정해주는 컬럼 ===>x축으로 구분
                                    가로 
                                    (들여쓰기) ->답변순서를 정해줄때 사용하는 필드
                                                      답변이 많아질 수 록 숫자가 증가된다.
                                    depth(깊이)
---------------------------------------------------------------------
게시판에 글쓰기
------------------------>신규글일때 step,level->항상 0 이다.

num(pk)    writer   subject content,,,         ref     step    level
   1            aaa                                    0        0        0 
                  |
                   -aaa-1                              0        1        1
                      |
                       -aaa-2                         0         2         2
                      |
                      -aaa-3                          0        3           2

   2            bbb                                   1        0        0         
                  |
                    -bbb-1                            1                  1
                        |
                         -bbb-2                      1                   2

   3            ccc                                    2        0        0                                        
                   |
                    -ccc-1                            2
-------------------------------------------------------
num    writer    ,,,         ref     step    level
  1       aaa                      0      0         0
            |
             -aaa-1               0       1           1
                  |
                   -aaa-2         0       2          2
                 |
                  -aaa-3          0       3           2

  2       bbb                      1      0         0
             |
               -bbb-1             1                 1
                   |
                    -bbb-2        1                 2

  3       ccc                       2      0         0
             |
              -ccc-1               2                 1

  4        ddd                    3       0          0
             |
               -ddd-1            3                  1


select * from board order by ref desc,re_step asc limit ?,?
                                    num



************************************************************************
그룹번호는 내림차순으로 정렬하되 답변글 순서는 오름차순으로
 정렬하라 몇번째 레코드부터 몇개기준으로 해서

** 우편번호로 확인 연습 *8

select count(*) from zipcode;

-- zipcode (오름차순으로 정렬->내림차순)) 시는 오름차순 
select * from zipcode order by zipcode desc,area1 asc limit 0,30;

--우편번호는 내림차순으로 시는 오름차순으로 정렬하되 10번째 레코드번호 부터 시작해서
-- 10개의 레코드를 찾아서 출력하라.
select * from zipcode order by zipcode desc,area1 asc limit 10,10;

--799-813 경북 울릉군 서면 태하리 
-- ? 첫번째시작 레코드번호,화면에 출력할 레코드갯수 

-- 5번째 레코드번호부터 시작해서 7개의 레코드를 찾아서 출력하라
 select * from zipcode order by zipcode desc,area1 asc limit 5,7;

----------------------------------------------------------------
테이블의 필드 3개(ref,step,level)
-------------------------------------
 1개
record->10개->1페이지 형성->10개페이지 (1 블럭) ->block

** 블럭의 종류 **

                     페이지수
                     1~10     11~20                                        21~30            
1.이전블럭=>이전 10개 11 12 13 14 15 16 17 18 19 20 다음블럭
                   ----------   현재 블럭                               =>레코드갯수가 200개
                    이번블럭이 나올조건 최소 현재페이지 11이상                                                                이상

2.현재블럭  1 2 3 4 [5] 6 7 8 9 10 =>레코드가 100개면
                     현재 블럭
3.다음블럭 1 2 3 4 5 6 7 8 9 10 ::: 다음 10개?  =>레코드갯수가 100개이상
                                                    다음블럭

*********************************************************

1. int nowPage=>현재 보고 있는 페이지(클릭해서)=>레코드번호,데이터가
                                                                           다르게 출력

2. int nowBlock=>현재블럭=>현재 페이지가 포함된 전체 페이지들

3  int numPerPage = 10;  =>페이지당 보여주는 레코드수를 지정   
               
4. int pagePerBlock = 10; =>블럭당 보여주는 페이지수를 지정

5. 총페이지수=총레코드수/페이지당 보여주는 레코드수
                                      122/10=12.2=(int)13.2=13

 12페이지 10개 2개->1 페이지를 더 생성->총 13페이지
                                                             122/10
    int totalPage =(int)Math.ceil((double)totalRecord / numPerPage);
                                      무조건 올림메서드

6. 총블럭수=총페이지수 /블럭당 보여주는 페이지수
    int totalBlock =(int)Math.ceil((double)totalPage / pagePerBlock);
	                                                   13/10=1.3

7. 페이지당 맨 처음에 보여주는 게시물 번호
                                   현재페이지*페이지당 보여주는 레코드수

   int beginPerPage =   nowPage * numPerPage;
                      ex)            1*10=10,9,8,7,6
                                     2*10=20,19,18,17,16,,
=======================================
list.jsp 시작 =>페이징 처리

 회원관리=>오라클인데 mysql로 변환

 1.DBConnectionMgr->mysql로 변환

 2.mydb에 member테이블 생성

create table member(     
 id varchar(20) primary key,
 passwd varchar(20) not null,
 name   varchar(20) not null,
 e_mail varchar(20) ,
 phone varchar(30)  not null,
 zipcode varchar(10) ,
 address varchar(60) not null,
 job  varchar(30)
 );

 insert into member values('nup','1234','홍길동',
        'test@daum.net','02-123-0987','132-098',
        '서울시 강남구 대현빌딩 3층','프로그래머');
===============================




                                      