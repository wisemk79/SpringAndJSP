4일차(jQuery의 DOM 사용법 및 이벤트처리방법)

1.selector->2.dom(특정 위치에 어떻게 출력?)->3.event->4.animation->5.Ajax
   10.filter.html
    save as
   11.filter2.html

             요소:contains(찾는문자열)->찾는 문자열을 가진 태그찾기
	요소:eq(n)->n번째 위치를 가진 태그찾기(인덱스번호가 같은거) ->ex) ~where ename='홍길동'
	요소:gt(n)->n번째보다 큰 위치를 가진 태그찾기 ex) >3
	요소:lt(n)->n번째보다 작은위치(인덱스번호) 위치를 가진 태그찾기 <2
	요소:not(선택자)->선택자와 일치하지 않은  태그찾기
	요소:has(특정 태그)->특정태그를 찾을때 사용


 //추가
	  $('td:contains(A형)').css('background','purple')
	  //$('tr:gt(2)').css('font-family','바탕체').css('font-size','16pt').css('color','red')
	  $('tr:lt(2)').css('font-family','바탕체').css('font-size','16pt').css('color','red')
	  //$('tr:first')  ==  $('tr:eq(0)')
	  //$('tr:eq(0)').css('font-size','23pt').css('background','yellow')
	  $('tr').eq(4).css('font-size','23pt').css('background','yellow')
	  //$('tr').not(':even').css('color','green')
	  $('tr:not(:even)').css('color','cyan')
==============================================
2.dom
   01.addClass.html

<script>
  $(function(){ 
	 // $('h1:eq(0)').attr('class','high_light_0')
	 /*
	  jQuery에서 스타일을 적용
	  1.css()->속성명->속성값을 부여(하나씩 부여)=>css({키명:속성명,,,})
	  2.addClass(적용시킬 클래스명)->한꺼번에 여러개의 스타일을 동시에 설정하고 싶다.
	     <->removeClass(해제시킬 클래스명)
	           toggleClass=>addClass<->removeClass 번갈아가면서 실행시켜주는 함수
	 */
	 //$('h1').addClass('high_light_0')->동일한 태그를 구분X ->each()함수를 이용
	 //콜백함수->함수호출시 매개변수로 전달되는 부분이 함수로 구성->호출->그 결과를 받아서 처리
	 $('h1').addClass(function(index){//각 태그를  구분하는 인덱스번호를 브라우저가 전달
		 alert(index) //0,1,2,3,4
		 return 'high_light_'+index
	 })
   })          
  
</script>
</head>
<body>
   <!-- <h1 class="high_light_0">Item-0</h1> 정적 -->
   <h1>Item-0</h1>
   <h1>Item-1</h1>
   <h1>Item-2</h1>
   <h1>Item-3</h1>
   <h1>Item-4</h1>
</body>
</html>
==================================
2.filter.html

//jquery 특정태그를 검색->contains(단어), not(찾는 선택자)(범위) 
	 //형식) $('선택자').filter('찾는 조건에 해당하는 선택자(태그 or 속성선택자)')
	 //$('h3:even').css({backgroundColor:'Black',color:'White'})
	 /*
	 $('h3').filter(':even').css({backgroundColor:'Black',color:'White'})
	 $('h3').filter(':odd').css({backgroundColor:'Yellow',color:'Red'})
	 
	 $('h3').filter(function(index){
		   return index%2==1
	 }).css({backgroundColor:'Black',color:'White'}) */
	 //제어문->if형식과 비슷->$('선택자').is('찾을 조건')->true or false
	 $('h3').each(function(){
		 if($(this).is('.select')){  //$(this)=>조건에 만족하는 h3태그를 가리킨다.
			 $(this).css('background','yellow').css('font-size','16pt')
		 }else{
			 $(this).css('background','green')
		 }
	 })
   })                                                          
</script>
</head>
<body>
   <h3>Header-1</h3>
   <h3 class="select">Header-2</h3>
   <h3 id="select">Header-3</h3>
   <h3>Header-4</h3>
   <h3>Header-5</h3>
</body>
</html>
=================================
3.append.html
 /*
	                 함수           설명
	      A,B=>태그           
	 $(A).appendTo(B)->A를 B의 기존자식의 뒤에 추가할때 사용
	 $(A).prependTo(B)->A를 B의 기존자식의 앞에 추가할때 사용
	 
	 $(A).insertAfter(B)->A를 B뒤에 추가할때 사용(자식에 추가 X)
	 $(A).insertBefore(B)->A를 B앞에 추가할때 사용(자식에 추가 X)

	  */
	  //$('<h1>jQueryTest</h1>').appendTo('div') (1)
	  //$('<h1>jQueryTest</h1>').prependTo('div')  //(2)
	  //$('<h1>DOMTest</h1>').insertAfter('div') //(3)
	  $('<h1>DOMTest</h1>').css('color','red').insertBefore('div')
	  $('img').attr('width',300).insertBefore('div')
   })                                                          
</script>
</head>
<body>
     <!-- <h1>DOMTest</h1> (4) -->
   <div>
        <!-- <h1>jQueryTest</h1> (2)-->
        <h1>안녕하세요?</h1>
        <!-- <h1>jQueryTest</h1> (1)-->
   </div>
   <!-- <h1>DOMTest</h1> (3) -->
   <h1>반가워요!</h1>
   <img src="../picCats/Persian.jpg" >
</body>
</html>
========================================
3.append.html save  4.append2.html

/*
	                 함수           설명
	      A,B=>태그           
	 $(A).append(B)->B를 A의 기존자식의 뒤에 추가할때 사용
	 $(A).prepend(B)->B를 A의 기존자식의 앞에 추가할때 사용
	 
	 $(A).after(B)->B를 A뒤에 추가할때 사용(자식에 추가 X)
	 $(A).before(B)->B를 A앞에 추가할때 사용(자식에 추가 X)

	  */
	  //$('div').append('<h1>jQueryTest 222</h1>') //(1) 부모.append(추가시킬 자식)
	  //$('div').prepend('<h1>jQueryTest 444</h1>')  //(2)
	  // $('div').after('<h1>DOMTest 555</h1>')  //(3)
	  // $('div > h1').css('color','red').before('<h1>DOMTest 6666</h1>')//(4)
	  $('img').attr('width',300).before('<h1>DOMTest 777</h1>')//이미지 앞에 배치
   })                                                          
</script>
</head>
<body>
     <!-- <h1>DOMTest 6666</h1> (4) -->
   <div>
        <!-- <h1>jQueryTest 444</h1> (2)-->
        <h1>안녕하세요?</h1>
        <!-- <h1>jQueryTest 222</h1> (1)-->
   </div>
   <!-- <h1>DOMTest 555</h1> (3) -->
   <h1>반가워요!</h1>
   <!-- <h1>DOMTest 777</h1> (5) -->
   <img src="../picCats/Persian.jpg" >
</body>
</html>
=====================================
5.append3.html

형식)               1.$(부모태그 > 자식태그)->부모태그 바로밑의 자식태그를 찾을때 (자손 포함 X)
	         2.$(부모태그  자식태그)->부모태그 바로밑의 자식태그를 찾을때 (자손 포함 O)
	         3.$(부모태그+자식태그)->부모태그 바로 옆에 인접한 형제태그(짝궁) 찾기
	         4.$(부모태그~자식태그)->부모태그 바로 옆에 짝궁+다른 인접한 태그까지 찾기
	          $('선택자').append(자식 태그)

 $('*').addClass('textstyle')
	  $('em~a').css('background-color','yellow')
	   .each(function(){
		   $('.result1').append($(this)) //추가시킬 자식은 for문을 통해서 얻어온 객체자신($this)
		   //alert('검색된 엘리먼트의 수:'+$('em~a').length) 추가된 갯수 세기
	   })  
===============================================
6.$.extend.html

//형식) $('선택자').함수(css,addClass,html,text,,,)=>특정태그와 연관이 있는 함수호출
	  //형식2) 선택자와 상관없이 단독으로 호출해서 사용할 수  있는 함수=>$.함수명(~)  $.ajax
	  var object1={}//비어있는 객체생성  //var object1=new Object();
	  //동적으로 속성(=멤버변수)을 추가->객체명.속성=값
	  object1.name='임시';
	  object1.addr='서울시 강남구 대현빌딩 3층';
	  object1.age=23;
	alert(object1.name+'님의 주소는 '+object1.addr+'이고요, 나이는 '+object1.age+'입니다')
   
     //$.extends(기존의 객체명,객체명,객체명2,,,)=>객체배열관리=>$.each
     //$.extends함수->기존의 객체에 속성을 계속해서 추가시킬때 필요
     var object2={name:'테스트'}
     $.extend(object2,{ //기존의 객체에 속성에 해당하는 내용을 추가시킬 목적
    	 region:'서울시 강북구',
    	 age:34,
    	 sung:'남자'
     })
     //출력=>자바->확장 for문=>자바스크립트(jQuery)->$.each
     //형식) $.each(1.출력할 객체명,2.매개변수(익명함수(key,value)을 갖는 함수호출))
      var output='';//출력할 값을 저장할 변수
      $.each(object2,function(key,item){
    	  output+=key+':'+item+'\n'
      })
      alert(output)
  })                     
------------------------------------------------------------------------
7.$each2.html

<title>$.each함수를 통한 객체배열 관리</title>
<script>
  $(function(){ 
	  //$.each()->단독으로 사용(배열관리(포털사이트 주소를 관리),객체관리)
	  var array=[{name:'naver',link:'http://www.naver.com'},  //{}
		               {name:'daum',link:'http://www.daum.net'},
		               {name:'nate',link:'http://www.empas.com'},
		               {name:'google',link:'http://www.google.com'}
		              ]  //배열생성
		 //형식) $.each(컬렉션(배열),처리해줄 함수명(index,value))=>매개변수이름은 아무거나 상관X
		 $.each(array,function(index,item){ //index->배열의 인덱스번호
			                                                  //item->배열의 인덱스를 통해서 접근가능한 객체
			  var output='';
			    output+='<a href="'+item.link+'">';
			    output+='<h1>'+item.name+'</h1>';
			    output+='</a>';
			    //인덱스번호에 해당하는 항목을 가져와서 body태그에 결합
			    document.body.innerHTML+=output;
		 })
   })                                                          
</script>
==============================================
3.event
   01.bind.html

 $(function(){ 
	  /*
	    1) window.on이벤트종류명=호출할 함수명 or 익명함수
	    2) window.addEventListener(이벤트종류명,실행할 함수명)
	    3) $('이벤트발생 대상선택자').bind(등록할 이벤트종류명,실행시킬 함수명)
	       내장객체=>event=>망수의 클릭상태,좌표값(x,y) 정보=>매개변수로 전달받을 수 있다.
	       1) 함수내용 끝에 return false 코딩->기본기능 중지
	       2) event객체를 매개변수로 전달받아서 event.preventDefault()를 호출함으로써 중지
	  */
	  /* (1)
	    $('a').bind('click',function(){
	    	alert('이벤트 연습중')
	    	return false
	    })
	   */
	   $('a').bind('click',function(event){
	    	//alert('이벤트 연습중')
	    	//$(this)->같은 태그를 구분하는 키워드로 사용(이벤트처리 대상자),이벤트를 발생시킨태그
	    	/*
	    	var href=$(this).attr('href')//<->$(this).attr('href',값)
	    	$('img').attr('src',href) //이미지태그의 src속성에 클릭한 이미지 경로를 넣어주면
	    	*/
	    	$('img').attr('src',$(this).attr('href'))
	    	event.preventDefault() //기본기능을 중지시켜주는 함수호출
	    })
   })                                 
   
</script>
</head>
<body>
   <ul><!-- 링크걸기(기본기능(페이지 이동기능)) -->
     <li><a href="../picCats/Persian.jpg">Persian</a></li>
     <li><a href="../picCats/RussianBlue.jpg">RussianBlue</a></li>
     <li><a href="../picCats/BritishShorthairs.jpg">BritishShorthairs</a></li>
   </ul>
   
  <!--  <img src="../picCats/Persian.jpg"> -->
  <img>
</body>
</html>
==============================================
  02.toggleClass.html

<style>
  p {margin:4px;font-size;16px;
       font-weight:bolder;cursor:pointer}
   .blue {color:blue}
</style>
<script>
  $(function(){ 
	  //$('p').bind('click',function(){ //<->unbind()(이벤트 등록 해제)
		 //jQuery에서의 이벤트 연결방법2->$('선택자').이벤트종류명(function(){ 처리 내용}) 
	   $('p').click(function(){
		   //alert('클릭')
		   //형식) $(선택자).toggleClass(클래스명) (addClass()<->removeClass)
		   $(this).toggleClass('blue')//이벤트를 발생시킨 태그를 가리키는 예약어 $(this)
	  })
   })                                                          
</script>
</head>
<body>
   <p class="blue">엘리먼트에 적용된 클래스를 </p>
   <p>추가하고 제거하기를 반복연습합니다.
</body>
</html>
=============================================

