3일차(jQuery의 선택자,DOM사용법)

1.selector(선택자)=>2.DOM=>3.event=>4.animation=>5.Ajax
   01~11.html         01~11.html

2.cdn.html

<script>
  $(function(){ //ready함수->onload이벤트 대신 사용
	  //형식) $(element(태그이름),id,class선택자,,,).함수명().함수명().함수명()...체이닝메서드방법
	  //형식) $('태그명').css('속성명','속성값')
	  $('h1').css('color','red')//h1태그의 글자색은 빨간색으로 설정한다.
	  $('span').css('border','3px solid blue')//setter Method느낌
	  //형식2) $('태그명.클래스명').css('속성명','속성값')
	  $('p.my').css('border','8px double green')//my라는 클래스선택자를 가진 태그를 찾아서
	                                                              //스타일 적용하라
	  //형식3) id선택자->$('#id선택자이름').css('속성명','속성값')    
	  $("#content").css('background','yellow')
	  //형식4) 모든 태그를 가리키는 예약어=>*
	  $('*').css('color','cyan')//동일한 스타일을 여러번 적용=>맨 마지막이 반영이 된다.
   })                                                          
  
</script>
-----------------------------------------------------
03.template.html

 $(function(){ 
	  //var test=document.getElementsByTagName('h2')//태그정보->태그객체를 의미
	  //형식) var $변수명=값(객체를 저장하고 있다는 의미로 해석)
	  var $test=$('h2')
              =============
	  //alert(test)//[object Object]->자바스크립트 객체 표시
	  /*
	  test.css('font-family','궁서체')
	  test.css('font-size','30pt')
	  test.css('color','red')
	  특정태그에 대해서 함수를 호출할때 여러개의 함수를 마치 체인처럼 나열해서 호출하는 방법
	  chaining method 방법
	  */
	  $test.css('font-family','궁서체').css('font-size','40pt').css('color','green')
   })       
---------------------------------------------------------
*** 04.each.html
<title>jquery(같은 태그인데 어떻게 각각 스타일을 따로 적용시킬 수 있을까?)</title>
<style>
    .fromjQuery0 {color:red}
    .fromjQuery1 {color:pink}
    .fromjQuery2 {color:blue}
    .fromjQuery3 {color:yellow}
</style>
<script>
   var i=0//첨자로 이용(각각의 클래스 선택자를 구분하기위해서 사용)->var 상관없이 무조건 전역
  $(function(){ 
	   //형식) $('선택자').attr('속성명','속성값') <->$('선택자').attr(속성명)
	   //같은 태그를 어떻게 구분해서 스타일을 적용? =>반복적으로 스타일을 적용(구분->each)
	   //$('li').attr('class','fromjQuery0') //<->$('li').attr('class')
	   //형식2)$('반복적으로 수행할 태그명').each(호출할 사용자정의함수명 | 익명함수명)
	  $('li').each(forEach)
   })   
   
   function forEach(){ //각각의 서로 다른 li태그에 스타일을 다르게 설정
	   $(this).attr('class','fromjQuery'+i)
	   //자바처럼->현재 for문 돌아가면서 각각 선택된 li태그를 구분하는 예약어->$(this)
	   //현재 선택해서 읽어들이는 태그객체를 구분시켜주는 예약어
	   i++;
   }
</script>
</head>
<body>
   <h1>jQuery each함수 예제</h1>
   <ul><!-- 태그정보.setAttribute('속성명(키명)','속성값(저장할값)') -->
      <li>jQuery each() 연습</li>
      <li>jQuery each() 연습2</li>
      <li>jQuery each() 연습3</li>
      <li>jQuery each() 연습4</li>
   </ul>
   
   <!-- <ul> (1) 정적디자인->디자인한 그 상태 그대로 보여주는것
      <li class="fromjQuery0">jQuery each() 연습</li>
      <li class="fromjQuery1">jQuery each() 연습2</li>
      <li class="fromjQuery2">jQuery each() 연습3</li>
      <li class="fromjQuery3">jQuery each() 연습4</li>
   </ul> -->
</body>
</html>
================================================
05.each2.html

$(function(){ 
	  //중첩된 태그의 정보를 어떻게 얻어오고 내용을 검색,스타일을 적용?
	  var $nodes=$('#root').children().css('color','red')
	  alert('자식들의 수=>'+$nodes.length)
	  var txt="";//자식들의 이름을 저장할 변수
	  //형식)$(반복적으로 실행시킬 태그명).each(호출할 함수명 | 익명함수)
	  /*
	   1.text()=>태그내부의 텍스트(문자열만) 가져오는 함수<->text(매개변수(저장할값(문자열)))
	   2.html()=>태그와 텍스트들까지 같이 가져오는 함수<->html(매개변수)->Setter Method
	   3.val()=>form태그 안에 입력양식에 해당되는 값을 가져올때 사용(input)<->val(매개변수값)
	  */
	  $('#root').children().each(function(){ //jquery함수->매개변수가 익명함수형태로 작성
		  txt+=$(this).text()+" ";
	  })
	  alert(txt);
   })                                                          
</script>
</head>
<body>
   <h1>jQuery 예제(중첩)</h1>
   <div id="root"><!-- 부모 자식관계(중첩된 상태)  -->
       <div><b>홍길동</b></div>
       <div>테스트김</div>
       <div><i>임시</i></div>
       <div>임시테스트</div>
   </div>
</body>
</html>
=======================================
 06.child.html

<script>
  $(function(){ 
	  //중첩->트리구조형성(DOM)
	  //형식) 부모태그 자식태그->부모태그 바로 밑에 있는 자식태그를 선택 (자손태그 포함 O)
	  $('body div').css('border','3px solid navy')
	  //형식) 부모태그 > 자식태그->부모태그 바로 밑에 있는 자식태그를 선택 (자손태그 포함 X)
	  $('p > span').css('border','3px dotted red')
	  //형식) 부모태그+자식태그=>바로 옆의 태그를 찾을때 사용
	  $('span+a').next().css('border','4px double green')
	  //next()->바로 다음번 항목(태그),prev()->바로 전의 항목(태그)
	  $('span+a').prev().css('background','yellow')
   })                                                          
</script>
</head>
<body>
   <div>
       <ul> 과일목록
              <li>사과</li>
              <li>배</li>
              <li>복숭아</li>
              <li>오렌지</li>
              <li>파인애플</li>
       </ul>
       <div>가을</div>
   </div>
   <div>jQuery 연습</div>
   <p>
       <span>태그정보</span>
       <a>one</a>
       <span>태그정보2</span>
   </p>
</body>
</html>


=========================================
 07.attr.html

<script>
  $(function(){ 
	  /*
		 선택자  속성         설명
		 요소[속성명]->특정 속성을 가진 태그를 찾을때 사용
		 요소[속성명=값]->속성값이 일치하는 태그를 찾아라
		 요소[속성명!=값]->속성값이 일치하지않는 태그를 찾아라
		 
		 요소[속성명^=값]->지정한값으로 시작하는 태그를 찾아라
		 요소[속성명|=값]->지정하는값을 찾거나 지정한글자- 태그를 찾아라
		 요소[속성명$=값]->지정한 값으로 끝나는 태그를 찾아라
		 요소[속성명*=값]->지정한 값을 포함한 태그를 찾아라(ex sql의 like연산자 비슷) 관련된 값 다 찾는경우
		 요소[속성명~=값]->지정한값을 단어로서 포함하는 태그를 찾아라(단어중심으로 )
		  */
		 $('button[name]').html('변경됨') //<->$('button').html()
		 //button태그중에서 속성명이 name을 가진 버튼을 찾아서 버튼의 이름을 변경됨으로 바꿔라
		 $('input[type=text]').val('hello jQuery')//<->$('input[type]').val()
		 //input태그중에서 type속성값이 text인 태그를 찾아서 hello jQuery글자를 저장시켜라
		 //$('input[type!=text]').val('부정')//input태그중에서 type 속성이 text가 아닌태그
		 $('div[id^=content-]').css('background','blue')
		 //div태그중에서 id속성값이  content-로 시작하는 태그를 찾아서 배경색을 blue로 변경시켜라
		 $('div[id|=content]').css('background','yellow')
		 //div태그의 id속성값이 content 이거나 content- 인것을 찾아라
		 $('div[id$=2]').css('font-size','20pt').css('background','yellow').css('color','red')
		 //div태그의 id속성값중에서 2로 끝나는 태그 찾기
		 $('input[id*=한국]').css('font-size','30pt').css('background','brown')
		 //input태그중에서 id속성값이 한국을 포함하는 단어찾기(공백은 인식X)
		 $('input[name~=한국]').css('font-size','50pt').css('color','green')//공백을 인식O->단어중심으로 찾을때
   }) 
====================================================
08.inputattr.html =>입력폼에서 주로 사용하는 속성선택자 확인
==============
          <script>
  $(function(){ 
	  /*
	     전송폼에 관련된 필터속성선택자가 따로 존재->요소[속성명=값]=>요소:속성명
	     
		 요소:button->input 태그중에서 type속성이 button인 경우
		       비활성화(disabled) true <-->활성화(enabled)->true
		요소:reset(초기화),요소:submit(전송)
		요소:text->type속성이 text인 경우
		요소:checkbox,->checked->false(체크하지 마라)->true(체크표시)
		요소:file(파일첨부)
		요소:image,요소:password,요소:radio
		  */
		  //형식) $('선택자').attr('속성명','속성값')<->~.atr(속성명)
		  //$('input[checkbox]')
		  $('input:checkbox').attr('checked',false)//체크해제
		  $('input:disabled').attr('disabled',false) //비활성화 제거->활성화 시켜달라
		  $('input:text').val('값을 입력하세요')//~val('')->input box의 값을 지울때 사용
		  $('input:password').css('background','pink').val('값입력')
		  //input태그중에서 type속성이  password속성을 찾아서 배경색을 pink, 값입력 저장
		  //input태그중에서 type속성이 button을 찾아서 버튼의 value값을 회원가입으로 저장
		  $('input[type=button]').val('회원가입')
		  $('input:button').val('회원가입2')
   })                                                          
</script>
</head>
<body>
   <h1>jQuery 예제(입력양식에 관련된 필터 속성 선택자)</h1>
   <input type="text">
   <input type="password">
   <input type="button">
   <button>버튼2</button>
   <hr>
   <input type="checkbox" name="city" value="서울" checked>서울
   <input type="button" value="확인" disabled>
</body>
</html>
==============================================
09.select.html=>콤보박스에서 어느 특정한 항목을 선택을 이용
                  =>처리하는 경우

<script>
  $(function(){ 
	  /*
	    요소:selected=>select태그의 options객체중에서 선택된 태그를 가리킬때 사용->필터속성선택자
	    자바->쓰레드를 사용,자바스크립트,jQuery=>setTimeout,setInterval
	     1.setTimeout(호출할 함수명 | 익명함수,초단위(1000))->1초에 한번만 실행
	     2.setInterval(호출할 함수명 | 익명함수,초단위(1000))->1초에 계속 반복해서 실행
	    */
	    setInterval(function(){//setTimeout(function(){  한번만 실행
	    	var value=$('select > option:selected').val()
	    	alert(value)
	    },5000) //5초뒤에 선택한 항목을 화면에 출력
   })      
   
</script>
</head>
<body>
   <h1>jQuery 예제</h1>
   <select>
      <option>화면구현</option>
      <option>오라클</option>
      <option>자바</option>
      <option>JSP</option>
      <option>Ajax & JQuery</option>
   </select>
</body>
</html>
======================================
10.filter.html

<script>
  $(function(){ 
	  /*
	    같은태그 인데 속성이 없는 경우 구분->태그의 출력되는 순서로 기준
	     요소:odd=>홀수번째
	     요소:even=>짝수번째
	     요소:first=>첫번째 위치의 태그
	     요소:last=>마지막번째 위치의 태그
	  */
	  $('tr:even').css('background','pink')//내부적으로 인덱스번호는 0부터 시작
	  $('tr:first').next().css('font-size','34pt').css('background','yellow')
	  $('tr:last').css('font-size','50pt').css('background','cyan')
   })                                                          
</script>
</head>
<body>
   <h1>jQuery 예제(같은 태그에서 구분하는 방법(속성이 없다면 어떻게 구분?))</h1>
   <center>
      <table border="1">
         <tr><th>이름</th><th>혈액형</th></tr>
         <tr><td>테스트</td><td>A형</td></tr>
         <tr><td>임   시</td><td>B형</td></tr>
         <tr><td>테스트2</td><td>O형</td></tr>
         <tr><td>테스트3</td><td>AB형</td></tr>
      </table>
   </center>
</body>
</html>
=================================================

                  